CLI (command line interface) 
faster
more powerfull
learning curve
termina --- surounds shell
shell ----- Read command  =======> executes command (Checks what to do)
shell tyoes
Bash
zsh
csh

commands
tty (teletypewriter)
gives the name of the terminal
uname
prints the os name
uname -a
when running commands there are options that are triggered
man command returns the manual for a specific command
clear clears the terminal
 you can use multiple options in the same line and with one -
 whatis quickly tells you what a command does
 echo will return your input
echo will not print qoutations
echo -e hello \\n auis
-e makes it possible to interpret the backslashes
check in which cases the a single backslash wont work

date showcases date
time gives the time needed to run a programz
watch will refresh a command every 2 seconds
 to escape a command use ctrl + c or ctrl + shift + c or :q 
 !! will print out the previous command
 history will return the last 500 commands
 !id will execute one of the commands from the List if the id is invalid will return erros
 reboot will restart the machine
shutdown will shut it down after 1 minute 


lecture 18

file systems is an abstract layer that helps in managing data
 pwd will print the working directory
 ls list 
 a directory is a file
   nmcli for wifi management
   leccan



   lecture chapter 11 ibrahim 
   
each sectir is 512 bytes or 4096
chapter 10 thomas 


redirecion and pipelining are advantages that cli offers over gui
 > means save to file 
 >> append to file
 < means input
 2> channel number 2 error will be outputed
 &> both channels
 | means pipeline
 so output is used as another Input
 tee means save the output then give it as Input
 check &> /dev/null usage

homework
<< check it
awk '{print $colum num}'
&& joins two pipelines if a is executed then do be
|| opposite of && if a is error then execute b
semi colum dectates the end of a line or pipeline
# will dictate a commented
$(command) will execute the command and return the output as an argument
yes command 
make yes more dynamic 
yes $(date)
user can be a person 
couple of people 
or an application
sudo chmod g=x file
sudo chmod o+X file
sudo chmod o+t file
sudo chmod g+s file
